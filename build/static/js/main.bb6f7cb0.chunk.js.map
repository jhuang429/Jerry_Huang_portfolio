{"version":3,"sources":["assets/collo.png","assets/wheelygoodfood.png","assets/travelfrog.png","Screen/Main.js","Component/Nav.js","Screen/Resume.js","Screen/AboutMe.js","Screen/Projects.js","App.js","serviceWorker.js","index.js","assets/headshot.png","assets/Jerry_Huang_Resume.pdf"],"names":["module","exports","Main","className","class","src","require","href","target","Nav","Resume","Jerry_Huang_Resume","data","style","width","height","AboutMe","fontSize","flex","Projects","classes","makeStyles","root","maxWidth","media","useStyles","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb6f7cb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/collo.d07609a6.png\";","module.exports = __webpack_public_path__ + \"static/media/wheelygoodfood.10ce4b45.png\";","module.exports = __webpack_public_path__ + \"static/media/travelfrog.a73b4528.png\";","import React from 'react'\nimport Footer from '../Component/Footer'\nimport Jumbotron from '../Component/Jumbotron'\nimport { findByLabelText } from '@testing-library/react'\nimport headshot from '../assets/headshot.png'\n\n\nfunction Main() {\n    return (\n\n        <div className=\"main\">\n            <div className=\"content\">\n            <h1 class=\"splash\">Jerry Huang is a full stack web developer based in the New York Metro area</h1>\n            <img src={require('../assets/headshot.png')} />\n            </div>\n            <div className=\"links-menu\">\n                <span>|</span>\n                <a href=\"mailto:jhuang9240@gmail.com\" className=\"nav-item\">Email</a>\n                <span>|</span>\n                <a href=\"https://www.linkedin.com/in/jhuang9240/\" target=\"_blank\" className=\"nav-item\">LinkedIn</a>\n                <span>|</span>\n                <a href=\"https://github.com/jhuang429\" target=\"_blank\" className=\"nav-item\">GitHub</a>\n                <span>|</span>\n                <a href=\"https://medium.com/@jhuang9240\" target=\"_blank\" className=\"nav-item\">Medium</a>\n                <span>|</span>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Main ","import React from 'react'\n\nfunction Nav() {\n  return (\n    // <header className=\"container\">\n    //   <div className=\"row\">\n    //     <h1 className=\"col-sm-6\">\n    //       Jerry Huang\n    //       </h1>\n    //     <nav className=\"sm-6 text-right\">\n    //       <a href=\"/\">Home</a>\n    //       <a href=\"/experience\">Experience</a>\n    //       <a href=\"/education\">Education</a>\n    //       <a href=\"/resume\">Resume</a>\n    //       <a href=\"/projects\">Projects</a>\n    //     </nav>\n    //   </div>\n\n    // </header>\n\n\n    <div className=\"nav-menu\">\n       <span>|</span>\n       <a href=\"/\" className=\"nav-item\">HOME</a>\n       <span>|</span>\n       <a href=\"/about\" className=\"nav-item\">ABOUT</a>         \n       <span>|</span>\n       {/* <a href=\"/work\" className=\"nav-item\">WORK</a>\n       <span>|</span> */}\n       <a href=\"/projects\" className=\"nav-item\">PROJECTS</a>         \n       <span>|</span>\n       <a href=\"/resume\" className=\"nav-item\">RESUME</a>\n       <span>|</span>\n    </div>\n\n  )\n}\n\nexport default Nav","import React from 'react'\nimport Jumbotron from '../Component/Jumbotron'\nimport Jerry_Huang_Resume from \"../assets/Jerry_Huang_Resume.pdf\"\n\n\nfunction Resume() {\n    return (\n        <div>\n            <h1 class=\"title\">Resume</h1>\n            <div>\n                {Jerry_Huang_Resume && <object data={Jerry_Huang_Resume} style={{ width: \"50em\", height: \"50em\" }} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Resume\n\n","import React from 'react'\nimport Jumbotron from '../Component/Jumbotron'\n\nfunction AboutMe() {\n  return (\n    <div >\n      <h1 class=\"title\">About</h1>\n      <div className=\"content\">\n        <div style={{ fontSize: 21, flex: 3 }}>\n          <p>I am a Full Stack Software Developer with a significant experience leading multiple teams and project management.</p>\n\n          <p>In 2013, I graduated from Syracuse University with a dual degree in accounting and finance. I spent the following six years in various finance, retail, operations, systems, and logistics positions, gaining a wide understanding of corporate operations. I helped develop and implement many different technology initiatives at Macy's Inc such as E-sign, RFID and returns optimization. During this time, gained a passion for technology and an appreciation of how much technology impacts the world.</p>\n\n          <p>To gain an even higher level of understanding of technology, I enrolled in the software engineering program with The Flatiron School. During the program, I gain valuable experience building multiple projects with Ruby and Javascript frameworks. </p>\n\n          <p>With significant experience in project and product management, I can communicate concisely as a software professional and perform in any team environment.</p>\n\n          <p><b>Technical Skills:</b></p>\n          <ul>\n\n            <li>Javascript</li>\n            <li>React</li>\n            <li>React Native</li>\n            <li>Ruby</li>\n            <li>Ruby on Rails</li>\n            <li>Python</li>\n            <li>HTML</li>\n            <li>CSS</li>\n            <li>SQL</li>\n            <li>Postgres</li>\n            <li>Postgres</li>\n            <li>Git</li>\n          </ul>\n        </div>\n\n\n        <img src={require('../assets/headshot.png')} />\n      </div>\n    </div >\n  )\n}\n\nexport default AboutMe ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Projects() {\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"main\">\n      <h1 class=\"title\">Projects</h1>\n      <div class=\"project_container\">\n\n        <div className=\"project_card\">\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={require('../assets/collo.png')}\n                title=\"Collo App Screenshot\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Collo\n          </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Collo is a mobile application built with React Native front end and Ruby on Rails backend. Collo is an image and data organizer allowing users to take photos on their phones and write notes on the photos. Images are organized into collections where they can be easily searched.\n          </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"https://github.com/jhuang429/Collo_frontend\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  GitHub\n          </a>\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"https://youtu.be/ARlC8JsT5sA\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  Demo\n          </a>\n              </Button>\n            </CardActions>\n          </Card>\n        </div>\n\n        <div className=\"project_card\">\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={require('../assets/wheelygoodfood.png')}\n                title=\"Collo App Screenshot\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  WheelyGoodFood\n          </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    WheelyGoodFood takes the stress out of picking a lunch spot. Utilizing Yelp and Google Maps Api, WheelyGood foods provides restaurant information, ratings and directions all on one page. Spinning a wheel of fortune wheel adds to the fun! WheelyGoodFood is created with vanilla Javascript\n          </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"https://github.com/jhuang429/WheelyGoodFood-frontend\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  GitHub\n          </a>\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"http://www.wheelygoodfood.com\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  Demo\n          </a>\n              </Button>\n            </CardActions>\n          </Card>\n        </div>\n        <div className=\"project_card\">\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={require('../assets/travelfrog.png')}\n                title=\"Collo App Screenshot\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Travel Frog\n          </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Travel Frog is a mock social media website created with Ruby on Rails. The website allows inspires users to travel by browsing travel destinations. Users can find helpful travel information such as a short city bio, attractions, current weather, airport, current airfare, and other users' comments.\n          </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"https://github.com/jhuang429/travelfrog\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  GitHub\n          </a>\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                <a href=\"https://travelfrog.herokuapp.com/\" target=\"_blank\" style={{ \"text-decoration\": \"none\" }}>\n                  Demo\n          </a>\n              </Button>\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Projects ","import React from 'react';\nimport './App.css';\nimport Main from './Screen/Main'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Component/Nav';\nimport Resume from './Screen/Resume';\nimport AboutMe from './Screen/AboutMe';\nimport Projects from './Screen/Projects';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n\n\n        <div>\n          <Nav />\n        </div>\n\n        <div className=\"main\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <AboutMe />\n            </Route>\n            {/* <Route exact path=\"/work\">\n              <Experience />\n            </Route>\n            <Route exact path=\"/education\">\n              <Education />\n            </Route> */}\n            <Route path=\"/projects\">\n              <Projects />\n            </Route>\n            <Route exact path=\"/resume\">\n              <Resume />\n            </Route>\n            <Route path=\"/\">\n              <Main />\n            </Route>\n          </Switch>\n        </div>\n\n        <div></div>\n\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/headshot.49c2b5b9.png\";","module.exports = __webpack_public_path__ + \"static/media/Jerry_Huang_Resume.67023126.pdf\";"],"sourceRoot":""}